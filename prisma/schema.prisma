generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
  output   = "./generated.d.ts"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type SessionsFlash {
  error  String[]
  notice String[]
}

type UsersHistory {
  last_login DateTime @db.Date
  num_logins Float
}

model Todo {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model User {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  email Json?  @unique
}

model accounts {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  channel    Int
  comm_name  String
  comm_num   Int
  comm_type  String
  comm_unit  Int
  createTime DateTime @db.Date
  modifyTime DateTime @db.Date
  order_time DateTime @db.Date
  price      Int
  status     Int
  store_id   String
  store_name String
}

model accountstemp {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  order_time DateTime @db.Date
  price      String
  store_name String
}

model authors {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  avatar     String
  company    String
  email      String
  github     String
  layout     String
  linkedin   String
  name       String
  occupation String
  slug       String
  twitter    String
  type       String
}

model bookcode {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  bookname String
  encode   Float[]
}

model books {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  bookname    String
  comment     String
  createAt    DateTime @db.Date
  extend      String
  name        String
  oribookname String
  serial      Int
  size        Float
  status      Int

  @@unique([createAt, name, extend], map: "createAt_1_name_1_extend_1")
}

model books_demo {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  bookname    String
  createAt    DateTime @db.Date
  extend      String
  name        String
  oribookname String
  size        Float
  status      Int
}

model bookstmp2 {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  bookname    String
  comment     String
  createAt    DateTime @db.Date
  extend      String
  name        String
  oribookname String
  serial      Int
  size        Float
  status      Int
}

model captcha {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  captcha_location String
  captcha_text     String
  createdAt        DateTime @db.Date
  requestIp        String
}

model commodities {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  channel     Int
  createTime  DateTime @db.Date
  description String
  modifyTime  DateTime @db.Date
  name        String
  status      Int
  type        Int
}

model movies {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  comment  String
  createAt DateTime @db.Date
  name     String
  serial   Int
  size     Float
  status   Int
  tmp_name String
}

model sessions {
  id             String         @id @map("_id")
  expires        DateTime       @db.Date
  flash          SessionsFlash?
  /// Could not determine type: the field only had null or empty values in the sample set.
  keep_logged_in Json?
  username       String?
}

model stores {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  address    String
  createTime DateTime @db.Date
  employee   Int[]
  modifyTime DateTime @db.Date
  name       String
  status     Int
  type       Int
}

model users {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  created_at DateTime     @db.Date
  history    UsersHistory
  password   String
  roles      String[]
  status     Float
  username   String
}
